{
  "name": "passport-verticalresponse",
  "version": "0.0.7",
  "description": "Vertical Response authentication strategy for Passport.",
  "keywords": [
    "verticalresponse",
    "passport",
    "auth",
    "authentication"
  ],
  "repository": "",
  "main": "lib/passport-verticalresponse/index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": {
    "name": "Cyril Gaillard",
    "email": "cyril@fyrebox.com"
  },
  "license": "BSD",
  "dependencies": {
    "passport-oauth": "~0.1.15",
    "pkginfo": "~0.3.0"
  },
  "devDependencies": {
    "vows": "0.7.0"
  },
  "readme": "# Passport-VerticalResponse\n\n[Passport](http://passportjs.org/) strategy for authenticating with [VerticalResponse](http://www.verticalresponse.com/)\nusing the OAuth 2.0 API.\n\nThis module lets you authenticate using VerticalResponse in your Node.js applications.\nBy plugging into Passport, VerticalResponse authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Usage\n\n#### Configure Strategy\n\nThe Vertical Response authentication strategy authenticates users using a Vertical Response\naccount and OAuth 2.0 tokens.  The strategy requires a `verify` callback, which\naccepts these credentials and calls `done` providing a user, as well as\n`options` specifying a app ID, app secret, and callback URL.\n\n    passport.use(new VerticalResponseStrategy({\n        clientID: VERTICALRESPONSE_APP_ID,\n        clientSecret: VERTICALRESPONSE_APP_SECRET,\n        callbackURL: \"http://localhost:3000/auth/verticalresponse/callback\"\n      }, function (accessToken, refreshToken, profile, done) {\n        User.findOrCreate({ VerticalResponseId: profile.id }, function(err, user) {\n          return done(err, user);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'verticalresponse'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get('/auth/verticalresponse', passport.authenticate('verticalresponse'));\n\n    app.get('/auth/verticalresponse/callback',\n      passport.authenticate('verticalresponse', { failureRedirect: '/login' }),\n      function(req, res) {\n        // Successul authentication, redirect home.\n        res.redirect('/');\n      });\n\n## Credits\n\nCreated by [Cyril Gaillard](http://github.com/fyrebox)\n\nCode based on passport-campaignmonitor by [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n",
  "readmeFilename": "README.md",
  "_id": "passport-verticalresponse@0.0.1",
  "dist": {
    "shasum": "72ce367227fa8419aad6ccb4999102e4808b175d"
  },
  "_from": "passport-verticalresponse@*",
  "_resolved": "https://registry.npmjs.org/passport-verticalresponse/-/passport-verticalresponse-0.0.4.tgz"
}
